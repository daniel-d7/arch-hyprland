# Check if Yay is installed
if [ -n "$(command -v yay)" ]; then
  echo "Yay (AUR Helper) is already installed."
else
  # Prompt the user to install Yay
  read -p "Yay (AUR Helper) is required. Do you want to install Yay? (y/n): " install_yay
  if [ "$install_yay" == "y" ]; then
    sudo pacman -S --needed git base-devel
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
  else
    echo "Yay is required for this script. Exiting."
    exit 1
  fi
fi

# needed packages
needed_pacman_packages=(
  "wget" "hyprland" "nano" "lshw" "bluez" "bluez-utils" "brightnessctl" "file-roller" "grim" "imagemagick"
  "gvfs" "inotify-tools" "libinput" "lm_sensors" "pavucontrol" "python-pam" "slurp" "swayidle" "playerctl"
  "wl-clipboard" "tracker3" "tracker3-miners" "qt5-base" "qt6-base" "gnome-bluetooth" "gnome-control-center"
  "kitty" "sassc" "tlp" "btop" "firefox" "gnome-keyring" "gvfs-smb" "libgnome-keyring" "mpv" "neofetch" "network-manager-applet" "polkit-gnome" "thunar" 
  "obsidian" "neovim" "fzf" "gdm" "gdm-settings"
)

needed_aur_packages=(
  "aylurs-gtk-shell-git" "grimblast-git" "gtklock" "gtklock-userinfo-module" 
  "hyprpicker" "ttf-ubuntu-nerd" "ttf-ubuntu-mono-nerd"
  "sway-audio-idle-inhibit-git" "swww-git" "pywal-16-colors" "xdg-desktop-portal-hyprland"
  "wf-recorder" "wl-clip-persist-git" "wayshot-bin"
)

# optional packages
optional_pacman_packages=(
  "discord"  "flatpak" "fprintd" "fwupd" "cifs-utils"  "gimp" "gnome-calculator" 
  "gnome-disk-utility" "gnome-software" "gnome-sound-recorder" "gnome-tweaks"
  "intel-gpu-tools" "gvfs-smb" "libgnome-keyring" "mpv" "neofetch" "network-manager-applet"
  "nextcloud-client" "obs-studio" "smbclient" "seahorse" "polkit-gnome" "nautilus" "thunar" 
  "obsidian" "neovim" "neovide" "fzf" "wireguard-tools"
)

optional_aur_packages=(
  "spotify"  "wev" "tlpui" "git-credential-manager-core" "overskride "
)

# print packages
echo "Available packages:"
echo "1) Install only needed packages (both offical Arch and AUR)"
echo "2) Install needed and optional packages (both offical Arch and AUR)"

read -p "Enter the number of your choice: " choice

if [ "$choice" == "1" ]; then
  # Installation of needed packages (Pacman)
  for package in "${needed_pacman_packages[@]}"; do
    sudo pacman -S --needed --noconfirm "$package"
  done

  # Installation of needd packages (AUR)
  for package in "${needed_aur_packages[@]}"; do
    yay -S --noconfirm "$package"
  done
elif [ "$choice" == "2" ]; then
  # Installation of needed packages (Pacman)
  for package in "${needed_pacman_packages[@]}"; do
    sudo pacman -S --needed --noconfirm "$package"
  done

  # Installation of needed packages (AUR)
  for package in "${needed_aur_packages[@]}"; do
    yay -S --noconfirm "$package"
  done

  # Installation of optional packages (Pacman)
  for package in "${optional_pacman_packages[@]}"; do
    sudo pacman -S --noconfirm "$package"
  done

  # Installation of packages (AUR)
  for package in "${optional_aur_packages[@]}"; do
    yay -S --noconfirm "$package"
  done
else
  echo "Invalid choice. No packages were installed."
fi

git clone https://github.com/RoccoRakete/hyprland-dots.git
git clone https://github.com/RoccoRakete/hyprland-gtk-themes.git
git clone https://github.com/RoccoRakete/hyprland-icons.git

# Check if the directories exist
if [ -d ~/.config ]; then
  echo "~/.config directory exists."
  echo "Do you want to create a backup of the existing ~/.config directory and copy the new config? (y/n): "
  read create_config_backup
  if [ "$create_config_backup" == "y" ]; then
    mv ~/.config ~/.config_bak
    echo "~/.config_bak was created!"
    mkdir -p ~/.config
    mkdir -p ~/.dots
    echo "~/.config was created!"
    cp -r ./hyprland-dots/* ~/.dots
    ln -s ~/.dots/* ~/.config
  fi
else
  echo "~/.config directory does not exist."
  echo "Do you want to create it and copy the new config? (y/n): "
  read create_config
  if [ "$create_config" == "y" ]; then
    mkdir -p ~/.config
    mkdir -p ~/.dots
    echo "~/.config was created!"
    cp -r ./hyprland-dots/* ~/.dots
    ln -s ~/.dots/* ~/.config
  fi
fi

if [ -d ~/.icons ]; then
  echo "~/.icons directory exists."
  echo "Do you want to create a backup of the existing ~/.icons directory and copy the new icons? (y/n): "
  read create_icons_backup
  if [ "$create_icons_backup" == "y" ]; then
    mv ~/.icons ~/.icons_bak
    echo "~/.icons_bak was created!"
    mkdir -p ~/.icons
    echo "~/.icons was created!"
    cp -r ./hyprland-icons/* ~/.icons
  fi
else
  echo "~/.icons directory does not exist."
  echo "Do you want to create it and copy the new icons? (y/n): "
  read create_icons
  if [ "$create_icons" == "y" ]; then
    mkdir -p ~/.icons
    echo "~/.icons was created!"
    cp -r ./hyprland-icons/* ~/.icons
  fi
fi

if [ -d ~/.themes ]; then
  echo "~/.themes directory exists."
  echo "Do you want to create a backup of the existing ~/.themes directory and copy the new themes? (y/n): "
  read create_themes_backup
  if [ "$create_themes_backup" == "y" ]; then
    mv ~/.themes ~/.themes_bak
    echo "~/.themes_bak was created!"
    mkdir -p ~/.themes
    echo "~/.themes was created!"
    cp -r ./hyprland-gtk-themes/* ~/.themes
  fi
else
  echo "~/.themes directory does not exist."
  echo "Do you want to create it and copy the new themes? (y/n): "
  read create_themes
  if [ "$create_themes" == "y" ]; then
    mkdir -p ~/.themes
    echo "~/.themes was created!"
    cp -r ./hyprland-gtk-themes/* ~/.themes
  fi
fi

# install git version of Hyprland
read -p "Do you want to install the Git-Version of Hyprland? (Y/n): " choice

if [[ $choice == "n" || $choice == "N" ]]; then
  echo "hyprland-git was not installed!"
else
  echo "installing 'hyprland-git' ..."
  yay -S hyprland-git --noconfirm
  if [ $? -eq 0 ]; then
    echo "hyprland-git was installed!"
  else
    echo "Installation was aborted! Make sure you have 'yay' installed! "
  fi
fi

# install libadwaita-without-adwaita-git
read -p "Install libadwaita-without-adwaita? This is needed to run GTK4/Adwaita applications with a GTK3 theme... (Y/n): " choice

if [[ $choice == "n" || $choice == "N" ]]; then
  echo "libadwaita-without-adwaita-git was not installed!"
else
  echo "installing 'libadwaita-without-adwaita-git' ..."
  yay -S libadwaita-without-adwaita-git --noconfirm
  if [ $? -eq 0 ]; then
    echo "libadwaita-without-adwaita-git was installed!"
  else
    echo "Installation was aborted! Make sure you have 'yay' installed! "
  fi
fi

# install nvChad
read -p "Install nvChad? (Y/n): " choice

if [[ $choice == "n" || $choice == "N" ]]; then
  echo "nvChad was not installed!"
else
  echo "installing 'nvChad' ..."
  git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1
  if [ $? -eq 0 ]; then
    echo "nvChad was installed ... to set it up start 'neovim'"
  else
    echo "Installation was aborted!"
  fi
fi

# Download and install Hermit Nerd Font
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/Hermit.zip
unzip Hermit.zip -d Hermit
sudo cp -r ./Hermit /usr/share/fonts

# Edit monitors example config
example_conf_file="$HOME/.dots/hypr/presets/monitors.exampleconf"
conf_file="$HOME/.dots/hypr/monitors.conf"

# Check if file exists
if [ -e "$example_conf_file" ]; then
    read -p "Do you want so edit the monitors config now? Hyprland wouldn't work correctly otherwise! (y/n): " choice

    if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
        nano "$example_conf_file"
        if [ -e "$example_conf_file" ]; then
            cp "$example_conf_file" "$conf_file"
            echo "The file has been edited and copied to $conf_file successfully."
        else
            echo "The file doesn't exist!?"
        fi
    else
        echo "The file hasn't be edited!"
    fi
else
    echo "The exampleconfig doesn't exist!"
fi

sudo systemctl enable --now tlp.service

# Prompt the user to restart the computer
read -p "Installation has now completed. Do you want to reboot now? (y/n): " restart_pc
if [ "$restart_pc" == "y" ]; then
  reboot
fi
